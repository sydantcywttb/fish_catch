<?php

function fish_catch_block_info()
{
	$blocks['fish_catch'] = array(
		'info'  => t('Fish catch'),
		'cache' => DRUPAL_CACHE_PER_ROLE, // по умолчанию
	);

	return $blocks;
}

function fish_catch_menu()
{

	$items = array();

	$items['admin/config/content/fish_catch'] = array(
		'title'            => 'Рыболовная фирма',
		'description'      => 'Управление информацией.',
		'page callback'    => 'fish_list',
		'access arguments' => array('administer site configuration'),
	);

    // список катеров
    $items['admin/config/content/fish_catch/list'] = array(
        'title'  => 'Рейсы',
        'type'   => MENU_DEFAULT_LOCAL_TASK,
        'weight' => 1,
    );

    // добавление рейса
    $items['admin/config/content/fish_catch/%pass_cruise/passport_cruise_add'] = array(
        'title'            => 'Добавить рейс',
        'page callback'    => 'drupal_get_form',
        'page arguments'   => array('fish_catch_form', 4),
        'access arguments' => array('administer site configuration'),
        'type'             => MENU_CALLBACK,
    );
    // редактирование рейса
    $items['admin/config/content/fish_catch/%cruise_info/cruise_edit'] = array(
        'title'            => 'Редактировать рейс',
        'page callback'    => 'drupal_get_form',
        'page arguments'   => array('fish_catch_cruise_form', 4),
        'access arguments' => array('administer site configuration'),
        'type'             => MENU_CALLBACK,
    );
    // Удалить рейса
    $items['admin/config/content/fish_catch/%cruise_info/cruise_delete'] = array(
        'title'            => 'Удалить рейс',
        'page callback'    => 'cruise_delete',
        'page arguments'   => array(4),
        'access arguments' => array('administer site configuration'),
        'type'             => MENU_CALLBACK,
    );


    // Добавить пойманная рыба
    $items['admin/config/content/fish_catch/%cruise_info/add_fish'] = array(
        'title'            => 'Добавить рыбу',
        'page callback'    => 'drupal_get_form',
        'page arguments'   => array('fish_catch_add_form'),
        'access arguments' => array('administer site configuration'),
        'type'             => MENU_CALLBACK,
    );

    // катеры
    $items['admin/config/content/fish_catch/passport_list'] = array(
        'title'            => 'Катеры',
        'page callback'    => 'fish_passport_list',
        'access arguments' => array('administer site configuration'),
        'type'             => MENU_LOCAL_TASK,
        'weight'           => 2,
    );
    // добавление катера
    $items['admin/config/content/fish_catch/passport_add'] = array(
        'title'            => 'Добавить катер',
        'page callback'    => 'drupal_get_form',
        'page arguments'   => array('fish_passport_form'),
        'access arguments' => array('administer site configuration'),
        'type'             => MENU_LOCAL_TASK,
        'weight'           => 3,
    );
    // члены команды
    $items['admin/config/content/fish_catch/crewman/list'] = array(
        'title'            => 'Члены команды',
        'page callback'    => 'fish_crewman_list',
        'access arguments' => array('administer site configuration'),
        'type'             => MENU_LOCAL_TASK,
        'weight'           => 4,
    );
    // члены команды рейса
    $items['admin/config/content/fish_catch/%cruise_crewteam/crewman_list'] = array(
        'title'            => 'Члены команды',
        'page arguments'   => array(4),
        'page callback'    => 'fish_cruise_team_list',
        'access arguments' => array('administer site configuration'),
        'type'             => MENU_CALLBACK,
    );
    // новый член команды
    $items['admin/config/content/fish_catch/add_crewman'] = array(
        'title'            => 'Новый член команды',
        'page callback'    => 'drupal_get_form',
        'page arguments'   => array('fish_crewman_form'),
        'access arguments' => array('administer site configuration'),
        'type'             => MENU_LOCAL_TASK,
        'weight'           => 5,
    );
    // редактировать члена команды
    $items['admin/config/content/fish_catch/%crewman_info/edit_crewman'] = array(
        'title'            => 'Редактировать члена команды',
        'page callback'    => 'drupal_get_form',
        'page arguments'   => array('fish_crewman_form', 4),
        'access arguments' => array('administer site configuration'),
        'type'             => MENU_CALLBACK,
    );
    // добавить члена команды к рейсу
    $items['admin/config/content/fish_catch/%cruise_crewteam/crewteam_add'] = array(
        'title'            => 'Член команды к рейсу',
        'page callback'    => 'drupal_get_form',
        'page arguments'   => array('fish_cruise_team_add', 4),
        'access arguments' => array('administer site configuration'),
        'type'             => MENU_CALLBACK,
    );
    // добавить рыбу к рейсу
    $items['admin/config/content/fish_catch/%cruise_info/fish_cruise_add'] = array(
        'title'            => 'Рыба к рейсу',
        'page callback'    => 'drupal_get_form',
        'page arguments'   => array('fish_cruise_fish_add', 4),
        'access arguments' => array('administer site configuration'),
        'type'             => MENU_CALLBACK,
    );

    // банки
    $items['admin/config/content/fish_catch/bank/list'] = array(
        'title'            => 'Банки',
        'page callback'    => 'fish_bank_list',
        'access arguments' => array('administer site configuration'),
        'type'             => MENU_LOCAL_TASK,
        'weight'           => 6,
    );
    // посещение банок
    $items['admin/config/content/fish_catch/bank/list'] = array(
        'title'            => 'Посещение банок',
        'page callback'    => 'fish_bank_visit_list',
        'access arguments' => array('administer site configuration'),
        'type'             => MENU_LOCAL_TASK,
        'weight'           => 11,
    );
    // новая банка
    $items['admin/config/content/fish_catch/add_bank'] = array(
        'title'            => 'Новая банка',
        'page callback'    => 'drupal_get_form',
        'page arguments'   => array('fish_bank_form'),
        'access arguments' => array('administer site configuration'),
        'type'             => MENU_LOCAL_TASK,
        'weight'           => 7,
    );
    // редактировать банку
    $items['admin/config/content/fish_catch/%bank_info/edit_bank'] = array(
        'title'            => 'Редактировать банку',
        'page callback'    => 'drupal_get_form',
        'page arguments'   => array('fish_bank_form', 4),
        'access arguments' => array('administer site configuration'),
        'type'             => MENU_CALLBACK,
    );
    // добавить посещение банки
    $items['admin/config/content/fish_catch/add_bank_visit'] = array(
        'title'            => 'Добавить посещение банки',
        'page callback'    => 'drupal_get_form',
        'page arguments'   => array('fish_bank_visit_form'),
        'access arguments' => array('administer site configuration'),
        'type'             => MENU_LOCAL_TASK,
        'weight'           => 8,
    );
    // сорта рыбы банки
    $items['admin/config/content/fish_catch/%fish_bank/fish_bank'] = array(
        'title'            => 'Сорта рыбы банки',
        'page arguments'   => array(4),
        'page callback'    => 'fish_bank_fish_list',
        'access arguments' => array('administer site configuration'),
        'type'             => MENU_CALLBACK,
    );
    // улов выше среднего для банки
    $items['admin/config/content/fish_catch/%fish_bank/fish_avg_bank'] = array(
        'title'            => 'Катеры с уловом выше среднего',
        'page arguments'   => array(4),
        'page callback'    => 'fish_bank_avg_list',
        'access arguments' => array('administer site configuration'),
        'type'             => MENU_CALLBACK,
    );
    // рейсы банки
    $items['admin/config/content/fish_catch/%fish_bank/bank_cruise'] = array(
        'title'            => 'Рейсы банки',
        'page arguments'   => array(4),
        'page callback'    => 'fish_bank_cruise_list',
        'access arguments' => array('administer site configuration'),
        'type'             => MENU_CALLBACK,
    );
    // рейсы банки по данному сорту
    $items['admin/config/content/fish_catch/%fish_bank/%sort_info/fish_bank_cruise'] = array(
        'title'            => 'Рейсы банки по сорту',
        'page arguments'   => array(4, 5),
        'page callback'    => 'fish_bank_sort_cruise_list',
        'access arguments' => array('administer site configuration'),
        'type'             => MENU_CALLBACK,
    );
    // список сортов рыбы
    $items['admin/config/content/fish_catch/fish_list'] = array(
        'title'            => 'Сорта рыбы',
        'page callback'    => 'fish_catch_list',
        'access arguments' => array('administer site configuration'),
        'type'             => MENU_LOCAL_TASK,
        'weight'           => 8,
    );
    // рейсы по сорту рыбы
    $items['admin/config/content/fish_catch/%sort_info/sort_cruise_list'] = array(
        'title'            => 'Рейсы по сорту рыбы',
        'page arguments'   => array(4),
        'page callback'    => 'fish_sort_cruise_list',
        'access arguments' => array('administer site configuration'),
        'type'             => MENU_CALLBACK,
    );
    // новый сорт
    $items['admin/config/content/fish_catch/add_sort'] = array(
        'title'            => 'Новый сорт',
        'page callback'    => 'drupal_get_form',
        'page arguments'   => array('fish_sort_form'),
        'access arguments' => array('administer site configuration'),
        'type'             => MENU_LOCAL_TASK,
        'weight'           => 9,
    );
    // Поиск банок по интервалу с средним уловом
    $items['admin/config/content/fish_catch/search_bank'] = array(
        'title'            => 'Поиск банок',
        'page callback'    => 'fish_search_bank_list',
        'access arguments' => array('administer site configuration'),
        'type'             => MENU_LOCAL_TASK,
        'weight'           => 10,
    );



    return $items;
}



// список рейсов
function fish_list()
{
	$header = array(
		array('data' => t('Name')),
		array('data' => t('Release_date')),
		array('data' => t('Fishes')),
		array('data' => t('Actions')),
	);

    $query = db_query("SELECT c.cruise_id, c.passport_id, c.release_date, p.name, 
          (SELECT SUM(f.weight) AS count FROM {fish} AS f WHERE f.cruise_id = c.cruise_id) AS count
          FROM {passport} AS p, {cruise} AS c WHERE p.passport_id = c.passport_id", array());
    $result = $query->fetchAll();

    $row = array();

    if($result) {
        foreach ($result as $item) {
            $actions = array(
                l(t('Добавить рыбу'), 'admin/config/content/fish_catch/' . $item->cruise_id . '/fish_cruise_add'),
                l(t('Команда'), 'admin/config/content/fish_catch/' . $item->cruise_id . '/crewman_list'),
                l(t('edit'), 'admin/config/content/fish_catch/' . $item->cruise_id . '/cruise_edit'),
                l(t('delete'), 'admin/config/content/fish_catch/' . $item->cruise_id . '/cruise_delete'),
            );

            $date = date('d-m-Y', $item->release_date);
            $row [] = array(
                array('data' => $item->name),
                array('data' => $date),
                array('data' => $item->count),
                array('data' => implode(' | ', $actions)),
            );
        }
    }

	return theme('table', array(
		'header' => $header,
		'rows'   => $row,
	));
}






// добавление рейса
function fish_catch_form($form, &$form_state, $pass_cruise = null)
{

    $form['passport_id'] = array(
        '#title'         => t('Passport id'),
        '#description'   => t('Insert passport id'),
        '#type'          => 'textfield',
        '#default_value' => $pass_cruise ? $pass_cruise : '',
        '#required'      => true,
    );
    $form['release_date'] = array(
        '#title'         => t('Release date'),
        '#description'   => t('Release date 22-03-2018'),
        '#type'          => 'textfield',
        '#default_value' => '',
        '#required'      => true,
    );
    $form['return_date'] = array(
        '#title'         => t('Return date'),
        '#description'   => t('Return date 22-03-2018'),
        '#type'          => 'textfield',
        '#default_value' => '',
        '#required'      => false,
    );

    $form['submit'] = array(
        '#type'  => 'submit',
        '#value' => $pass_cruise ? t('Save') : t('Add'),
    );

    return $form;
}

function fish_catch_form_validate($form, &$form_state)
{

}

function fish_catch_form_submit($form, &$form_state)
{
    $addData = array(
        'passport_id' => $form_state['values']['passport_id'],
        'release_date' => $form_state['values']['release_date'],
        'return_date' => $form_state['values']['return_date'],
    );

    // formating date to int
    $addData['release_date'] = strtotime($addData['release_date']);
    $addData['return_date'] = strtotime($addData['return_date']);

    drupal_write_record('cruise', $addData);
    drupal_set_message(t('cruise added!'));

    drupal_goto('admin/config/content/fish_catch');
}

function pass_cruise_load($id) {

    return $id;
}


// редактирование рейса
function fish_catch_cruise_form($form, &$form_state, $cruise_info = null)
{

    $form['passport_id'] = array(
        '#title'         => t('Passport id'),
        '#description'   => t('Insert passport id'),
        '#type'          => 'textfield',
        '#default_value' => $cruise_info ? $cruise_info['passport_id'] : '',
        '#required'      => true,
    );
    $form['release_date'] = array(
        '#title'         => t('Release date'),
        '#description'   => t('Release date 22-03-2018'),
        '#type'          => 'textfield',
        '#default_value' => $cruise_info ? date('d-m-Y', $cruise_info['release_date']) : '',
        '#required'      => true,
    );
    $form['return_date'] = array(
        '#title'         => t('Return date'),
        '#description'   => t('Return date 22-03-2018'),
        '#type'          => 'textfield',
        '#default_value' => $cruise_info ? date('d-m-Y', $cruise_info['return_date']) : '',
        '#required'      => false,
    );

    $form['submit'] = array(
        '#type'  => 'submit',
        '#value' => $cruise_info ? t('Save') : t('Add'),
    );

    if ($cruise_info) {
        $form['cruise_id'] = array(
            '#type'  => 'value',
            '#value' => $cruise_info['cruise_id'],
        );
    }
    return $form;
}

function fish_catch_cruise_form_validate($form, &$form_state)
{

}

function fish_catch_cruise_form_submit($form, &$form_state)
{
    $addData = array(
        'passport_id' => $form_state['values']['passport_id'],
        'release_date' => $form_state['values']['release_date'],
        'return_date' => $form_state['values']['return_date'],
    );

    // formating date to int
    $addData['release_date'] = strtotime($addData['release_date']);
    $addData['return_date'] = strtotime($addData['return_date']);

    // save edit data
    if (isset($form_state['values']['cruise_id'])) {
        $addData['cruise_id'] = $form_state['values']['cruise_id'];
        drupal_write_record('cruise', $addData, 'cruise_id');
        drupal_set_message(t('cruise saved!'));
    } // add new data
    else {
        drupal_write_record('cruise', $addData);
        drupal_set_message(t('cruise added!'));
    }

    drupal_goto('admin/config/content/fish_catch');
}


function cruise_info_load($id)
{
    $cruise_info = db_select('cruise', 'n')
        ->fields('n', array('cruise_id', 'passport_id', 'release_date', 'return_date'))
        ->condition('n.cruise_id', $id)
        ->execute()->fetchAssoc();

    return $cruise_info;
}

function cruise_delete($cruise_info)
{
    $rss_orders_deleted = db_delete('cruise')
        ->condition('cruise_id', $cruise_info['cruise_id'])
        ->execute();
    drupal_set_message(t('Cruse deleted!'));
    drupal_goto('admin/config/content/fish_catch');
}



// добавление пойманной рыбы
function fish_catch_add_form($form, &$form_state, $cruise_info = null)
{

    $form['sort'] = array(
        '#title'         => t('Sort'),
        '#description'   => t('Insert sort'),
        '#type'          => 'textfield',
        '#default_value' => $cruise_info ? $cruise_info['sort'] : '',
        '#required'      => true,
    );
    $form['weight'] = array(
        '#title'         => t('Weight'),
        '#description'   => t('Insert weight'),
        '#type'          => 'textfield',
        '#default_value' => $cruise_info ? $cruise_info['weight'] : '',
        '#required'      => true,
    );

    $form['submit'] = array(
        '#type'  => 'submit',
        '#value' => $cruise_info ? t('Save') : t('Add'),
    );

    if ($cruise_info) {
        $form['cruise_id'] = array(
            '#type'  => 'value',
            '#value' => $cruise_info['cruise_id'],
        );
    }

    return $form;
}

function fish_catch_add_form_validate($form, &$form_state)
{

}

function fish_catch_add_form_submit($form, &$form_state)
{
    $addData = array(
        'sort' => $form_state['values']['sort'],
        'weight' => $form_state['values']['weight'],
        'cruise_id' => $form_state['values']['cruise_id'],
    );


    drupal_write_record('fish', $addData);
    drupal_set_message(t('fish added!'));

    drupal_goto('admin/config/content/fish_catch');
}


// катеры
function fish_passport_list()
{
    $header = array(
        array('data' => t('Name')),
        array('data' => t('Type')),
        array('data' => t('Created at')),
        array('data' => t('Water size')),
        array('data' => t('Actions'))
    );

    $query = db_query("SELECT p.passport_id, p.name, p.type, p.created_at, p.water_size FROM {passport} AS p", array());
    $result = $query->fetchAll();

    $row = array();

    if($result) {
        foreach ($result as $item) {
            $actions = array(
                l(t('добавить рейс'), 'admin/config/content/fish_catch/' . $item->passport_id . '/passport_cruise_add'),
            );

            $date = date('d-m-Y', $item->created_at);

            $row [] = array(
                array('data' => $item->name),
                array('data' => $item->type),
                array('data' => $date),
                array('data' => $item->water_size),
                array('data' => implode(' | ', $actions)),
            );
        }
    }

    return theme('table', array(
        'header' => $header,
        'rows'   => $row,
    ));
}

// добавление катера
function fish_passport_form($form, &$form_state, $passport_info = null)
{
    $form['name'] = array(
        '#title'         => t('Name'),
        '#description'   => t('Insert name'),
        '#type'          => 'textfield',
        '#default_value' => $passport_info ? $passport_info['name'] : '',
        '#required'      => true,
    );
    $form['type'] = array(
        '#title'         => t('Type'),
        '#description'   => t('Insert type'),
        '#type'          => 'textfield',
        '#default_value' => $passport_info ? $passport_info['type'] : '',
        '#required'      => true,
    );
    $form['created_at'] = array(
        '#title'         => t('Created date'),
        '#description'   => t('Created date 22-03-2018'),
        '#type'          => 'textfield',
        '#default_value' => $passport_info ? date('d-m-Y', $passport_info['created_at']) : '',
        '#required'      => true,
    );
    $form['water_size'] = array(
        '#title'         => t('Water size'),
        '#description'   => t('Insert water size'),
        '#type'          => 'textfield',
        '#default_value' => $passport_info ? $passport_info['water_size'] : '',
        '#required'      => true,
    );

    $form['submit'] = array(
        '#type'  => 'submit',
        '#value' => $passport_info ? t('Save') : t('Add'),
    );

    if ($passport_info) {
        $form['passport_id'] = array(
            '#type'  => 'value',
            '#value' => $passport_info['passport_id'],
        );
    }
    return $form;
}

function fish_passport_form_validate($form, &$form_state)
{

}

function fish_passport_form_submit($form, &$form_state)
{
    $addData = array(
        'name' => $form_state['values']['name'],
        'type' => $form_state['values']['type'],
        'created_at' => $form_state['values']['created_at'],
        'water_size' => $form_state['values']['water_size'],
    );

    // formating date to int
    $addData['created_at'] = strtotime($addData['created_at']);

    // save edit data
    if (isset($form_state['values']['passport_id'])) {
        $addData['passport_id'] = $form_state['values']['passport_id'];
        drupal_write_record('passport', $addData, 'passport_id');
        drupal_set_message(t('passport saved!'));
    } // add new data
    else {
        drupal_write_record('passport', $addData);
        drupal_set_message(t('passport added!'));
    }

    drupal_goto('admin/config/content/fish_catch/passport_list');
}

function passport_info_load($id) {

    $info = db_select('passport', 'n')
        ->fields('n', array('passport_id', 'name', 'type', 'created_at', 'water_size'))
        ->condition('n.passport_id', $id)
        ->execute()->fetchAssoc();

    return $info;
}


// члены команды
function fish_crewman_list()
{
    $header = array(
        array('data' => t('Name')),
        array('data' => t('Post')),
        array('data' => t('Address')),
        array('data' => t('Actions'))
    );

    $query = db_query("SELECT m.crewman_id, m.name, m.post, m.address FROM {crewman} AS m", array());
    $result = $query->fetchAll();

    $row = array();

    if($result) {
        foreach ($result as $item) {
            $actions = array(
                l(t('Добавить к рейсу'), 'admin/config/content/fish_catch/' . $item->crewman_id . '/crewteam_add'),
                l(t('edit'), 'admin/config/content/fish_catch/' . $item->crewman_id . '/edit_crewman'),
            );

            $row [] = array(
                array('data' => $item->name),
                array('data' => $item->address),
                array('data' => $item->post),
                array('data' => implode(' | ', $actions)),
            );
        }
    }

    return theme('table', array(
        'header' => $header,
        'rows'   => $row,
    ));
}

// добавление члена команды
function fish_crewman_form($form, &$form_state, $crewman_info = null)
{

    $form['name'] = array(
        '#title'         => t('Name'),
        '#description'   => t('Insert name'),
        '#type'          => 'textfield',
        '#default_value' => $crewman_info ? $crewman_info['name'] : '',
        '#required'      => true,
    );
    $form['address'] = array(
        '#title'         => t('Address'),
        '#description'   => t('Insert address'),
        '#type'          => 'textfield',
        '#default_value' => $crewman_info ? $crewman_info['address'] : '',
        '#required'      => true,
    );
    $form['post'] = array(
        '#title'         => t('Post'),
        '#description'   => t('Insert post'),
        '#type'          => 'textfield',
        '#default_value' => $crewman_info ? $crewman_info['post'] : '',
        '#required'      => true,
    );

    $form['submit'] = array(
        '#type'  => 'submit',
        '#value' => $crewman_info ? t('Save') : t('Add'),
    );

    if ($crewman_info) {
        $form['crewman_id'] = array(
            '#type'  => 'value',
            '#value' => $crewman_info['crewman_id'],
        );
    }

    return $form;
}

function fish_crewman_form_validate($form, &$form_state)
{

}

function fish_crewman_form_submit($form, &$form_state)
{
    $addData = array(
        'name' => $form_state['values']['name'],
        'address' => $form_state['values']['address'],
        'post' => $form_state['values']['post'],
    );

    // save edit data
    if (isset($form_state['values']['crewman_id'])) {
        $addData['crewman_id'] = $form_state['values']['crewman_id'];
        drupal_write_record('crewman', $addData, 'crewman_id');
        drupal_set_message(t('crewman saved!'));
    } // add new data
    else {
        drupal_write_record('crewman', $addData);
        drupal_set_message(t('crewman added!'));
    }


    drupal_goto('admin/config/content/fish_catch/crewman/list');
}

function crewman_info_load($id)
{
    $cruise_info = db_select('crewman', 'n')
        ->fields('n', array('crewman_id', 'name', 'address', 'post'))
        ->condition('n.crewman_id', $id)
        ->execute()->fetchAssoc();

    return $cruise_info;
}




// члены команды рейса
function fish_cruise_team_list($cruise_crewteam)
{

    $header = array(
        array('data' => t('Name')),
        array('data' => t('Post')),
        array('data' => t('Address')),
        array('data' => t('Actions'))
    );

    $query = db_query("SELECT m.crewman_id, m.name, m.address, m.post FROM {crewman} AS m,
          {cruise_team} AS t, {cruise} AS c
          WHERE c.cruise_id = :cid AND c.cruise_id = t.cruise_id AND t.crewman_id = m.crewman_id",
        array("cid" => $cruise_crewteam));
    $result = $query->fetchAll();

    $row = array();

    if($result) {
        foreach ($result as $item) {
            $actions = array(
                l(t('delete'), 'admin/config/content/fish_catch/cruise/crewman/' . $item->crewman_id . '/delete'),
            );

            $row [] = array(
                array('data' => $item->name),
                array('data' => $item->address),
                array('data' => $item->post),
                array('data' => implode(' | ', $actions)),
            );
        }
    }

    return theme('table', array(
        'header' => $header,
        'rows'   => $row,
    ));
}

// добавление члена команды к рейсу
function fish_cruise_team_add($form, &$form_state, $cruise_crewteam = null)
{

    $info = db_select('cruise', 'n')
        ->fields('n', array('cruise_id'))
        ->execute()->fetchAll();

    $select_cruise = array();

    $itemId = 0;

    foreach ($info as $item) {
        $itemId = $item->cruise_id;
        $select_cruise[$item->cruise_id] = $item->cruise_id;

    }


    $form['cruise_id'] = array(
        '#type' => 'select',
        '#title' => t('Cruise id'),
        '#options' => $select_cruise,
        '#default_value' => $select_cruise[$itemId],
        '#description' => t('Set cruise id.'),
    );

    $form['submit'] = array(
        '#type'  => 'submit',
        '#value' => $cruise_crewteam ? t('Save') : t('Add'),
    );

    if ($cruise_crewteam) {
        $form['crewman_id'] = array(
            '#type'  => 'value',
            '#value' => $cruise_crewteam,
        );
    }

    return $form;
}

function fish_cruise_team_add_validate($form, &$form_state)
{

}

function fish_cruise_team_add_submit($form, &$form_state)
{
    $addData = array(
        'crewman_id' => $form_state['values']['crewman_id'],
        'cruise_id' => $form_state['values']['cruise_id'],
    );


    drupal_write_record('cruise_team', $addData);
    drupal_set_message(t('cruise added!'));

    drupal_goto('admin/config/content/fish_catch/'.$addData['cruise_id'].'/crewman_list');
}

function cruise_crewteam_load($id) {

    return $id;
}

// добавление рыбы к рейсу
function fish_cruise_fish_add($form, &$form_state, $cruise_info = null)
{

    $form['sort'] = array(
        '#title'         => t('sort'),
        '#description'   => t('Insert sort'),
        '#type'          => 'textfield',
        '#default_value' => '',
        '#required'      => true,
    );
    $form['weight'] = array(
        '#title'         => t('weight'),
        '#description'   => t('Insert weight'),
        '#type'          => 'textfield',
        '#default_value' => '',
        '#required'      => true,
    );

    $form['submit'] = array(
        '#type'  => 'submit',
        '#value' => t('Save'),
    );


    if ($cruise_info) {
        $form['cruise_id'] = array(
            '#type'  => 'value',
            '#value' => $cruise_info['cruise_id'],
        );
    }

    return $form;
}

function fish_cruise_fish_add_validate($form, &$form_state)
{

}

function fish_cruise_fish_add_submit($form, &$form_state)
{
    $addData = array(
        'sort' => $form_state['values']['sort'],
        'weight' => $form_state['values']['weight'],
        'cruise_id' => $form_state['values']['cruise_id'],
    );


    drupal_write_record('fish', $addData);
    drupal_set_message(t('fish added!'));

    drupal_goto('admin/config/content/fish_catch');
}


// банки
function fish_bank_list()
{
    $header = array(
        array('data' => t('Name')),
        array('data' => t('Description')),
        array('data' => t('Actions'))
    );

    $query = db_query("SELECT m.bank_id, m.name, m.description FROM {bank} AS m", array());
    $result = $query->fetchAll();

    $row = array();

    if($result) {
        foreach ($result as $item) {
            $actions = array(
                l(t('улов > среднего'), 'admin/config/content/fish_catch/' . $item->bank_id . '/fish_avg_bank'),
                l(t('рейсу по сорту рыбы'), 'admin/config/content/fish_catch/' . $item->bank_id . '/fish_bank'),
                l(t('рейсы'), 'admin/config/content/fish_catch/' . $item->bank_id . '/bank_cruise'),
                l(t('edit'), 'admin/config/content/fish_catch/' . $item->bank_id . '/edit_bank'),
            );

            $row [] = array(
                array('data' => $item->name),
                array('data' => $item->description),
                array('data' => implode(' | ', $actions)),
            );
        }
    }

    return theme('table', array(
        'header' => $header,
        'rows'   => $row,
    ));
}


// добавление банки
function fish_bank_form($form, &$form_state, $bank_info = null)
{

    $form['name'] = array(
        '#title'         => t('Name'),
        '#description'   => t('Insert name'),
        '#type'          => 'textfield',
        '#default_value' => $bank_info ? $bank_info['name'] : '',
        '#required'      => true,
    );
    $form['description'] = array(
        '#title'         => t('Description'),
        '#description'   => t('Insert description'),
        '#type'          => 'textfield',
        '#default_value' => $bank_info ? $bank_info['description'] : '',
        '#required'      => true,
    );

    $form['submit'] = array(
        '#type'  => 'submit',
        '#value' => $bank_info ? t('Save') : t('Add'),
    );

    if ($bank_info) {
        $form['bank_id'] = array(
            '#type'  => 'value',
            '#value' => $bank_info['bank_id'],
        );
    }
    return $form;
}

function fish_bank_form_validate($form, &$form_state)
{

}

function fish_bank_form_submit($form, &$form_state)
{
    $addData = array(
        'name' => $form_state['values']['name'],
        'description' => $form_state['values']['description'],
    );

    // save edit data
    if (isset($form_state['values']['bank_id'])) {
        $addData['bank_id'] = $form_state['values']['bank_id'];
        drupal_write_record('bank', $addData, 'bank_id');
        drupal_set_message(t('bank saved!'));
    } // add new data
    else {
        drupal_write_record('bank', $addData);
        drupal_set_message(t('bank added!'));
    }

    drupal_goto('admin/config/content/fish_catch/bank/list');
}


function bank_info_load($id)
{
    $cruise_info = db_select('bank', 'n')
        ->fields('n', array('bank_id', 'name', 'description'))
        ->condition('n.bank_id', $id)
        ->execute()->fetchAssoc();

    return $cruise_info;
}


// посещение банок
function fish_bank_visit_list()
{
    $header = array(
        array('data' => t('Название')),
        array('data' => t('Дата прибытия')),
        array('data' => t('Дата отплыва')),
        array('data' => t('Качество рыбы')),
        array('data' => t('Рейс №')),
        array('data' => t('Actions'))
    );

    $query = db_query("SELECT bv.visit_id, b.bank_id, b.name, bv.arrival_date, bv.departure_date,
            bv.quality, bv.cruise_id 
            FROM {bank} AS b, {bank_visit} AS bv WHERE b.bank_id = bv.bank_id
            ORDER BY bv.visit_id", array());
    $result = $query->fetchAll();

    $row = array();

    if($result) {
        foreach ($result as $item) {
            $actions = array(
                l(t('edit'), 'admin/config/content/fish_catch/' . $item->visit_id . '/edit_bank_visit'),
            );

            $row [] = array(
                array('data' => $item->name),
                array('data' => $item->arrival_date),
                array('data' => $item->departure_date),
                array('data' => $item->quality),
                array('data' => $item->cruise_id),
                array('data' => implode(' | ', $actions)),
            );
        }
    }

    return theme('table', array(
        'header' => $header,
        'rows'   => $row,
    ));
}

// добавление посещения банки
function fish_bank_visit_form($form, &$form_state, $bank_visit_info = null)
{

    $info = db_select('cruise', 'n')
        ->fields('n', array('cruise_id'))
        ->execute()->fetchAll();

    $select_cruise = array();

    $itemId = 0;

    foreach ($info as $item) {
        $itemId = $item->cruise_id;
        $select_cruise[$item->cruise_id] = $item->cruise_id;

    }

    $form['cruise_id'] = array(
        '#type' => 'select',
        '#title' => t('Cruise id'),
        '#options' => $select_cruise,
        '#default_value' => $select_cruise[$itemId],
        '#description' => t('Set cruise id.'),
    );


    $infoBank = db_select('bank', 'n')
        ->fields('n', array('bank_id', 'name'))
        ->execute()->fetchAll();

    $select_bank = array();

    $itemBankId = 0;

    foreach ($infoBank as $item) {
        $itemBankId = $item->bank_id;
        $select_bank[$item->bank_id] = $item->name;
    }

    $form['bank_id'] = array(
        '#type' => 'select',
        '#title' => t('Bank id'),
        '#options' => $select_bank,
        '#default_value' => $select_bank[$itemBankId],
        '#description' => t('Set bank id.'),
    );

    $form['arrival_date'] = array(
        '#title'         => t('Arrival date'),
        '#description'   => t('Arrival date 22-03-2018'),
        '#type'          => 'textfield',
        '#default_value' => $bank_visit_info ? date('d-m-Y', $bank_visit_info['arrival_date']) : '',
        '#required'      => true,
    );
    $form['departure_date'] = array(
        '#title'         => t('Departure date'),
        '#description'   => t('Departure date 22-03-2018'),
        '#type'          => 'textfield',
        '#default_value' => $bank_visit_info ? date('d-m-Y', $bank_visit_info['departure_date']) : '',
        '#required'      => true,
    );
    $form['quality'] = array(
        '#title'         => t('Качество'),
        '#description'   => t('Insert quality'),
        '#type'          => 'textfield',
        '#default_value' => $bank_visit_info ? $bank_visit_info['quality'] : '',
        '#required'      => true,
    );

    $form['submit'] = array(
        '#type'  => 'submit',
        '#value' => $bank_visit_info ? t('Save') : t('Add'),
    );

    if ($bank_visit_info) {
        $form['visit_id'] = array(
            '#type'  => 'value',
            '#value' => $bank_visit_info['visit_id'],
        );
    }
    return $form;
}

function fish_bank_visit_form_validate($form, &$form_state)
{

}

function fish_bank_visit_form_submit($form, &$form_state)
{
    $addData = array(
        'cruise_id' => $form_state['values']['cruise_id'],
        'bank_id' => $form_state['values']['bank_id'],
        'arrival_date' => $form_state['values']['arrival_date'],
        'departure_date' => $form_state['values']['departure_date'],
        'quality' => $form_state['values']['quality'],
    );

    // formating date to int
    $addData['arrival_date'] = strtotime($addData['arrival_date']);
    $addData['departure_date'] = strtotime($addData['departure_date']);

    // save edit data
    if (isset($form_state['values']['visit_id'])) {
        $addData['visit_id'] = $form_state['values']['visit_id'];
            drupal_write_record('bank_visit', $addData, 'visit_id');
        drupal_set_message(t('bank_visit saved!'));
    } // add new data
    else {
        drupal_write_record('bank_visit', $addData);
        drupal_set_message(t('bank_visit added!'));
    }

    drupal_goto('admin/config/content/fish_catch/');
}

function bank_visit_info_load($id)
{
    $cruise_info = db_select('bank_visit', 'n')
        ->fields('n', array('visit_id', 'cruise_id', 'bank_id', 'arrival_date', 'departure_date', 'quality'))
        ->condition('n.visit_id', $id)
        ->execute()->fetchAssoc();

    return $cruise_info;
}


// рейсы банки
function fish_bank_cruise_list($fish_bank)
{

    $header = array(
        array('data' => t('Name')),
        array('data' => t('Release_date')),
        array('data' => t('Fishes')),
        array('data' => t('Actions')),
    );

    $query = db_query("SELECT c.cruise_id, c.passport_id, c.release_date, p.name, 
          (SELECT SUM(f.weight) AS count FROM {fish} AS f WHERE f.cruise_id = c.cruise_id) AS count
          FROM {passport} AS p, {cruise} AS c, {bank} AS b, {bank_visit} AS bv
           WHERE p.passport_id = c.passport_id AND b.bank_id = bv.bank_id AND bv.cruise_id = c.cruise_id
            AND b.bank_id = :bid", array("bid" => $fish_bank));
    $result = $query->fetchAll();

    $row = array();

    if($result) {
        foreach ($result as $item) {
            $actions = array(
                l(t('Добавить рыбу'), 'admin/config/content/fish_catch/' . $item->cruise_id . '/fish_cruise_add'),
                l(t('Команда'), 'admin/config/content/fish_catch/' . $item->cruise_id . '/crewman_list'),
                l(t('edit'), 'admin/config/content/fish_catch/' . $item->cruise_id . '/cruise_edit'),
                l(t('delete'), 'admin/config/content/fish_catch/' . $item->cruise_id . '/cruise_delete'),
            );

            $date = date('d-m-Y', $item->release_date);
            $row [] = array(
                array('data' => $item->name),
                array('data' => $date),
                array('data' => $item->count),
                array('data' => implode(' | ', $actions)),
            );
        }
    }

    return theme('table', array(
        'header' => $header,
        'rows'   => $row,
    ));
}

// сорта рыбы банки
function fish_bank_fish_list($fish_bank)
{

    $header = array(
        array('data' => t('Сорт')),
        array('data' => t('Actions'))
    );

    $query = db_query("SELECT f.sort from {fish} AS f GROUP BY f.sort",
        array());
    $result = $query->fetchAll();

    $row = array();

    if($result) {
        foreach ($result as $item) {
            $actions = array(
                l(t('список рейсов'), 'admin/config/content/fish_catch/' . $fish_bank . '/' . $item->sort . '/fish_bank_cruise'),
            );

            $row [] = array(
                array('data' => $item->sort),
                array('data' => implode(' | ', $actions)),
            );
        }
    }

    return theme('table', array(
        'header' => $header,
        'rows'   => $row,
    ));
}


// сорта рыбы рейса
function fish_cruise_fish_list($cruise_info)
{

    $header = array(
        array('data' => t('Сорт')),
        array('data' => t('Actions'))
    );

    $query = db_query("SELECT f.sort FROM {fish} AS f, {cruise} AS c
              WHERE c.cruise_id = f.cruise_id AND c.cruise_id = :cid GROUP BY f.sort",
        array("cid" => $cruise_info['cruise_id']));
    $result = $query->fetchAll();

    $row = array();

    if($result) {
        foreach ($result as $item) {
            $actions = array(
                l(t('edit'), 'admin/config/content/fish_catch/' . $item->fish_id . '/fish_edit'),
            );

            $row [] = array(
                array('data' => $item->sort),
                array('data' => implode(' | ', $actions)),
            );
        }
    }

    return theme('table', array(
        'header' => $header,
        'rows'   => $row,
    ));
}

// катеры с уловом выше среднего
function fish_bank_avg_list($fish_bank)
{

    $header = array(
        array('data' => t('Название')),
        array('data' => t('Улов')),
        array('data' => t('Actions'))
    );

    $query = db_query("SELECT p.name, SUM(f.weight) AS count 
          FROM {bank_visit} AS bv, 
            {cruise} AS c, {passport} AS p, {fish} AS f WHERE 
             bv.cruise_id = c.cruise_id AND c.passport_id = p.passport_id 
             AND f.weight > (
              SELECT AVG(f.weight) FROM {fish} AS ff, {cruise} AS cc,
              {bank_visit} AS bvbv 
              WHERE cc.cruise_id = bvbv.cruise_id AND bvbv.bank_id = :bid 
                AND ff.cruise_id = cc.cruise_id
              ) 
            AND f.cruise_id = c.cruise_id AND bv.bank_id = :bid 
             GROUP BY p.passport_id, f.sort 
             ORDER BY p.passport_id DESC",
        array("bid" => $fish_bank));
    $result = $query->fetchAll();

    $row = array();

    if($result) {
        foreach ($result as $item) {
            $actions = array(
                l(t('edit'), 'admin/config/content/fish_catch/' . $item->passport_id . '/edit_passport'),
            );

            $row [] = array(
                array('data' => $item->name),
                array('data' => $item->count),
                array('data' => implode(' | ', $actions)),
            );
        }
    }

    return theme('table', array(
        'header' => $header,
        'rows'   => $row,
    ));
}

function fish_bank_load($id) {
    return $id;
}


// список рейсов банки по сорту
function fish_bank_sort_cruise_list($fish_bank, $sort_info) {

    $header = array(
        array('data' => t('Name')),
        array('data' => t('Release_date')),
        array('data' => t('Fishes')),
        array('data' => t('Actions')),
    );

    $query = db_query("SELECT c.cruise_id, c.release_date, p.name, 
          (SELECT COUNT(f.fish_id) AS count FROM {fish} AS f WHERE f.cruise_id = c.cruise_id) AS count
          FROM {passport} AS p, {cruise} AS c, {fish} AS f, {bank} AS b, {bank_visit} AS bv
           WHERE p.passport_id = c.passport_id AND bv.bank_id = b.bank_id AND bv.cruise_id = c.cruise_id 
          AND 
          f.cruise_id = c.cruise_id AND f.sort = :sort_name AND b.bank_id = :bid",
        array("bid" => $fish_bank, "sort_name" => $sort_info));
    $result = $query->fetchAll();

    $row = array();

    if($result) {
        foreach ($result as $item) {
            $actions = array(
                l(t('добавить рыбу'), 'admin/config/content/fish_catch/' . $item->cruise_id . '/add_fish'),
                l(t('команда'), 'admin/config/content/fish_catch/' . $item->cruise_id . '/crewman_list'),
                l(t('edit'), 'admin/config/content/fish_catch/' . $item->cruise_id . '/cruise_edit'),
                l(t('delete'), 'admin/config/content/fish_catch/' . $item->cruise_id . '/cruise_delete'),
            );

            $date = date('d-m-Y', $item->release_date);
            $row [] = array(
                array('data' => $item->name),
                array('data' => $date),
                array('data' => $item->count),
                array('data' => implode(' | ', $actions)),
            );
        }
    }

    return theme('table', array(
        'header' => $header,
        'rows'   => $row,
    ));
}

function sort_info_load($id) {
    return $id;
}



// сорта рыбы
function fish_catch_list()
{

    $header = array(
        array('data' => t('Сорт')),
        array('data' => t('Actions'))
    );

    $query = db_query("SELECT fs.sort_id, fs.name FROM {fish_sort} AS fs 
        GROUP BY fs.sort_id 
        ORDER BY fs.sort_id DESC",
        array());
    $result = $query->fetchAll();

    $row = array();

    if($result) {
        foreach ($result as $item) {
            $actions = array(
                l(t('список рейсов'), 'admin/config/content/fish_catch/' . $item->sort_id . '/sort_cruise_list'),
            );

            $row [] = array(
                array('data' => $item->name),
                array('data' => implode(' | ', $actions)),
            );
        }
    }

    return theme('table', array(
        'header' => $header,
        'rows'   => $row,
    ));
}

// список рейсов по сорту
function fish_sort_cruise_list($sort_info) {

    $header = array(
        array('data' => t('Name')),
        array('data' => t('Дата выхода')),
        array('data' => t('Дата возвращения')),
        array('data' => t('Улов')),
        array('data' => t('Actions')),
    );

    $query = db_query("SELECT c.cruise_id, c.passport_id, c.release_date, c.return_date, p.name, 
          (SELECT SUM(f.weight) FROM {fish} AS f WHERE f.cruise_id = c.cruise_id) AS count
          FROM {passport} AS p, {cruise} AS c, {fish} AS f 
           WHERE p.passport_id = c.passport_id AND 
          f.cruise_id = c.cruise_id AND f.sort = :sort_name",
        array("sort_name" => $sort_info));
    $result = $query->fetchAll();

    $row = array();

    if($result) {
        foreach ($result as $item) {
            $actions = array(
                l(t('добавить рыбу'), 'admin/config/content/fish_catch/' . $item->cruise_id . '/add_fish'),
                l(t('команда'), 'admin/config/content/fish_catch/' . $item->cruise_id . '/crewman_list'),
                l(t('edit'), 'admin/config/content/fish_catch/' . $item->cruise_id . '/cruise_edit'),
                l(t('delete'), 'admin/config/content/fish_catch/' . $item->cruise_id . '/cruise_delete'),
            );

            $date = date('d-m-Y', $item->release_date);
            $dateReturn = date('d-m-Y', $item->return_date);
            $row [] = array(
                array('data' => $item->name),
                array('data' => $date),
                array('data' => $dateReturn),
                array('data' => $item->count),
                array('data' => implode(' | ', $actions)),
            );
        }
    }

    return theme('table', array(
        'header' => $header,
        'rows'   => $row,
    ));
}

// добавление сорта
function fish_sort_form($form, &$form_state, $sort_fish_info = null)
{

    $form['name'] = array(
        '#title'         => t('Name'),
        '#description'   => t('Insert name'),
        '#type'          => 'textfield',
        '#default_value' => $sort_fish_info ? $sort_fish_info['name'] : '',
        '#required'      => true,
    );

    $form['submit'] = array(
        '#type'  => 'submit',
        '#value' => $sort_fish_info ? t('Save') : t('Add'),
    );

    if ($sort_fish_info) {
        $form['sort_id'] = array(
            '#type'  => 'value',
            '#value' => $sort_fish_info['sort_id'],
        );
    }
    return $form;
}

function fish_sort_form_validate($form, &$form_state)
{

}

function fish_sort_form_submit($form, &$form_state)
{
    $addData = array(
        'name' => $form_state['values']['name'],
    );

    // save edit data
    if (isset($form_state['values']['sort_id'])) {
        $addData['sort_id'] = $form_state['values']['sort_id'];
        drupal_write_record('fish_sort', $addData, 'sort_id');
        drupal_set_message(t('fish_sort saved!'));
    } // add new data
    else {
        drupal_write_record('fish_sort', $addData);
        drupal_set_message(t('fish_sort added!'));
    }

    drupal_goto('admin/config/content/fish_catch/fish_list');
}

function sort_fish_info_load($id)
{
    $cruise_info = db_select('fish_sort', 'n')
        ->fields('n', array('sort_id', 'name'))
        ->condition('n.sort_id', $id)
        ->execute()->fetchAssoc();

    return $cruise_info;
}


// банки с средним уловом по датам
function fish_search_bank_list()
{
    $dateOne = '22-01-2018';
    $dateTwo = '24-05-2019';

    $timeOne = strtotime($dateOne);
    $timeTwo = strtotime($dateTwo);


    $header = array(
        array('data' => t('Название')),
        array('data' => t('Средний улов'))
    );

    $query = db_query("SELECT b.name, (
              SELECT AVG(ff.weight) FROM {fish} AS ff, {cruise} AS cc, 
                {bank_visit} AS bvbv 
                WHERE bvbv.cruise_id = cc.cruise_id AND ff.cruise_id = cc.cruise_id
            ) AS count FROM {bank} AS b, {bank_visit} AS bv 
            WHERE (bv.arrival_date BETWEEN :tone AND :ttwo) AND bv.bank_id = b.bank_id GROUP BY bv.bank_id",
        array("tone" => $timeOne, "ttwo" => $timeTwo));
    $result = $query->fetchAll();

    $row = array();

    if($result) {
        foreach ($result as $item) {

            $row [] = array(
                array('data' => $item->name),
                array('data' => $item->count),
            );
        }
    }

    return theme('table', array(
        'header' => $header,
        'rows'   => $row,
    ));
}
